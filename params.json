{"tagline":"松散的Javascript MVC框架。尝试与其他框架进行整合！","google":"","body":"_Model模块_\r\n_____________________\r\n\r\n## 版本号：v0.1.1 ##\r\n  \r\n  已经实现了对object类型和string、number、boolean类型的基本绑定功能\r\n  并对HTML元素的绑定（View Model）进行初步的特殊设定，并且会进一步完善VM模块\r\n  \r\n  -----------------------\r\n  \r\n## 快速开始 ##\r\n```javascript\r\nvar b = Binder(\"hello word\");\r\n```\r\n## 基本操作 ##\r\n```javascript\r\nvar b = Binder(\"Hello\");\r\nb.set(\"hi my lover\");\r\nb.get()  //Return\"hi my lover\"\r\n```\r\n## 绑定类型 ##\r\n* _简单类型(Single type)_ [number、string、boolean]\r\n* _复合对象(Object type)_\r\n* _功能对象(Function type)_\r\n\r\n```javascript\r\n//[number、string、boolean]\r\nvar sin = Binder(23);\r\n//Object\r\nvar obj = Binder({firstname:\"Gaubee\",lastname:\"bangeel\"});\r\n//HTML Object\r\n//bind model and it's key word for default update,and \"value\" is default currently\r\nvar firstname = Binder(document.getElementById(\"firstname\"),\"innerHTML\");\r\n//Function\r\nvar fullname = Binder(function(firstname,lastname){\r\n document.getElementById(\"fullname\") = firstname.value\r\n                                     + \" \"\r\n                                     + lastname.value;\r\n},[document.getElementById(\"firstname\"),document.getElementById(\"firstname\")]);\r\n```\r\n## 绑定操作 ##\r\n* 直接绑定\r\n* 监听绑定 _结构和功能未完善，建议直接使用 *直接绑定*_\r\n* 双向绑定 _结构和功能还在设计中_\r\n\r\n* 简单对象绑定\r\n\r\n```javascript\r\nvar str1 = Binder(\"hello word\");\r\nvar str2 = Binder(\"hi my love\");\r\nstr1.binding(str2);\r\nstr1.set(\"you are mine\");\r\nstr2.get();//still return \"hi my love\".Will not immediately change the binding is asynchronous,\r\nsetTimeout(function(){\r\n str2.get();//return \"you are mine\"\r\n},10);\r\n```\r\n* 复合对象绑定:\r\n\r\n```javascript\r\nvar firstname = Binder(document.getElementById(\"firstname\"));\r\nvar lastname = Binder(document.getElementById(\"lastname\"));\r\n//if run \".get()\",return document.getElementById(\"firstname\").value,\"value\" is default key\r\n\r\n//objbind-model,if firstname being changed,fullname will be changing too;\r\n//@Binder obj,if not,conver defaultly;\r\n//@[key word],string type,if not,it will take the key word when fitstname being init;\r\n//@[config],{ updateKey: null, weights: 0, forceUpdate: 0, compromise: false },\r\n //forceUpdate Means whether mandatory update already exists, even if the update history(update route table)\r\n //【DANGER, WARNING】,it may be cause an infinite loop,and continuously updated\r\nfirstname.binding(document.getElementById(\"fullname\"),{updateKey:[\"title\",\"innerHTML\"]});\r\n\r\n//and for lastname\r\nlastname.binding(document.getElementById(\"fullname\"),{updateKey:[\"title\",\"innerHTML\"]});\r\n//you could do that soon: \r\n //fullname.monitorList([firstname,lastname],[\"title\",\"innerHTML\"]);\r\n```\r\n* 计算功能绑定:\r\n\r\n```javascript\r\nvar fullname = Binder(function (n1,n2) {\r\n          document.getElementById(\"fullname\").innerHTML = n1.get() + \" \" + n2.get();\r\n      }, [firstname,lastname]);\r\n```\r\n","name":"Loosemvc","note":"Don't delete this file! It's used internally to help with page regeneration."}